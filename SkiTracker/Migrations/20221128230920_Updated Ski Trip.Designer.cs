// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkiTracker.Models;

#nullable disable

namespace SkiTracker.Migrations
{
    [DbContext(typeof(SkiTrackerDbContext))]
    [Migration("20221128230920_Updated Ski Trip")]
    partial class UpdatedSkiTrip
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SkiTracker.Models.Condition", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("ResortId")
                        .HasColumnType("int");

                    b.Property<string>("SnowCondition")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<decimal>("TemperatureF")
                        .HasColumnType("Decimal(5,2)");

                    b.Property<string>("Weather")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("id");

                    b.HasIndex("ResortId");

                    b.ToTable("Conditions");
                });

            modelBuilder.Entity("SkiTracker.Models.Resort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("BeginnerFriendly")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<bool>("ExpertFriendly")
                        .HasColumnType("bit");

                    b.Property<bool>("IntermediateFriendly")
                        .HasColumnType("bit");

                    b.Property<decimal>("Lifts")
                        .HasColumnType("Decimal(7,0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<bool>("NightSki")
                        .HasColumnType("bit");

                    b.Property<bool>("Snowmaking")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<decimal>("Trails")
                        .HasColumnType("Decimal(7,0)");

                    b.Property<decimal>("Vertical")
                        .HasColumnType("Decimal(7,2)");

                    b.HasKey("Id");

                    b.ToTable("Resorts");
                });

            modelBuilder.Entity("SkiTracker.Models.Run", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Features")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ResortId")
                        .HasColumnType("int");

                    b.Property<decimal>("Vertical")
                        .HasColumnType("Decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("ResortId");

                    b.ToTable("Runs");
                });

            modelBuilder.Entity("SkiTracker.Models.Skiier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int?>("SkiTripId")
                        .HasColumnType("int");

                    b.Property<string>("SnowSport")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("SkiTripId");

                    b.ToTable("Skiiers");
                });

            modelBuilder.Entity("SkiTracker.Models.SkiTrip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Arrival")
                        .HasColumnType("date");

                    b.Property<int>("Attendees")
                        .HasColumnType("int");

                    b.Property<DateTime>("Departure")
                        .HasColumnType("date");

                    b.Property<string>("Housing")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("HousingCost")
                        .HasColumnType("Decimal(7,2)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("ResortId")
                        .HasColumnType("int");

                    b.Property<int>("RunTotal")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TripName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("VerticalTotal")
                        .HasColumnType("Decimal(7,2)");

                    b.HasKey("Id");

                    b.HasIndex("ResortId");

                    b.ToTable("SkiTrips");
                });

            modelBuilder.Entity("SkiTracker.Models.SkiTripLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("RunCount")
                        .HasColumnType("int");

                    b.Property<int>("RunId")
                        .HasColumnType("int");

                    b.Property<int>("SkiTripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RunId");

                    b.HasIndex("SkiTripId");

                    b.ToTable("SkiTripLines");
                });

            modelBuilder.Entity("SkiTracker.Models.Condition", b =>
                {
                    b.HasOne("SkiTracker.Models.Resort", "Resort")
                        .WithMany()
                        .HasForeignKey("ResortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resort");
                });

            modelBuilder.Entity("SkiTracker.Models.Run", b =>
                {
                    b.HasOne("SkiTracker.Models.Resort", "Resort")
                        .WithMany()
                        .HasForeignKey("ResortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resort");
                });

            modelBuilder.Entity("SkiTracker.Models.Skiier", b =>
                {
                    b.HasOne("SkiTracker.Models.SkiTrip", null)
                        .WithMany("Skiiers")
                        .HasForeignKey("SkiTripId");
                });

            modelBuilder.Entity("SkiTracker.Models.SkiTrip", b =>
                {
                    b.HasOne("SkiTracker.Models.Resort", "Resort")
                        .WithMany()
                        .HasForeignKey("ResortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resort");
                });

            modelBuilder.Entity("SkiTracker.Models.SkiTripLine", b =>
                {
                    b.HasOne("SkiTracker.Models.Run", "Run")
                        .WithMany()
                        .HasForeignKey("RunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkiTracker.Models.SkiTrip", "SkiTrip")
                        .WithMany("SkiTripLines")
                        .HasForeignKey("SkiTripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Run");

                    b.Navigation("SkiTrip");
                });

            modelBuilder.Entity("SkiTracker.Models.SkiTrip", b =>
                {
                    b.Navigation("SkiTripLines");

                    b.Navigation("Skiiers");
                });
#pragma warning restore 612, 618
        }
    }
}
